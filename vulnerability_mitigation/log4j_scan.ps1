Import-Module ActiveDirectory
#Creates a data table and adds custom columns to it.
function createDT()
{
    ###Creating a new DataTable###
    $tempTable = New-Object System.Data.DataTable
   
    ##Creating Columns for DataTable##
    $col1 = New-Object System.Data.DataColumn(“ServerName”)
    $col2 = New-Object System.Data.DataColumn(“Path”)
    $col3 = New-Object System.Data.DataColumn(“Error”)
           
    ###Adding Columns for DataTable###
    $tempTable.columns.Add($col1)
    $tempTable.columns.Add($col2)
    $tempTable.columns.Add($col3)

    return ,$tempTable
}
#Created the list of Servers to run the foreach loop aganist and the data table
$Servers = $null
$Servers = Get-ADComputer  -Properties * -Filter "(OperatingSystem -Like '*Server*') -and (Enabled -eq '$True') -and (ServicePrincipalName -notLike '*MSServerCluster*')" `
| Select-Object -ExpandProperty Name
$dTable = $null
$dTable = createDT
$Date = (Get-Date -Format yyyy.MM.dd_T_HH.mm.ss)
$dir = "C:\temp\log4jreport"

ForEach ($server in $servers) { 
$path = Invoke-Command -ComputerName $Server -ScriptBlock {
$Volumes = Get-Volume | Where-Object {($_.FileSystem -EQ "NTFS") -and ($_.FileSystemLabel -notlike "*Reserved*" )  } | Select-Object -ExpandProperty DriveLetter
ForEach ($Volume in $Volumes){
Get-ChildItem -LiteralPath ($volume + ":\") -Filter *log4j-core-2.*.jar -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.fullname -notlike "*log4j-core-2.16*.jar" -and $_.fullname -notlike "*log4j-core-2.17*.jar"} | % { $_.FullName}
    }    
}
 # Writes the findings to the datatable creating a new row for every server
 $path | ForEach-Object{
 $row = $dTable.NewRow()
        $row[“ServerName”] = $Server
        $row[“Path”] = ($PSItem)
        $dTable.rows.Add($row)
        }
}
New-Item -Path $dir -ItemType Directory
$dTable | Export-Csv $dir\$date.csv -Force
Write-Host "Report exported to" $dir\$date.csv
